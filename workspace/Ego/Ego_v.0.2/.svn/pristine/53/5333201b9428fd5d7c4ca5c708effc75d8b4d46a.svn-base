package ego.dto;
import ego.dbms.*;
import ego.vo.*;

public class TestDTO extends DBManager
{
	String sql = "";
	public boolean testInsert(TestVO vo)
	{
		//데이터베이스에 연결한다.
		if(DBOpen() == false) return false;
		
		//Test 테이블에 Insert하는 구문을 만든다.
		sql  = "";
		sql += "insert into user (t_title,t_rjoincount,t_foldername,t_hashtag,t_postdate) ";
		sql += "values (";
		sql += "'" + vo.getTestTitle().replace("'","") + "',";
		sql += "'" + vo.getJoinCount() + "',";		
		sql += "'" + vo.getFoldername() + "',";		
		sql += "'" + vo.getHashtag() + "',";		
		sql += "'" + vo.getPostdate() + "')";
		RunSQL(sql);
		return true;
	}
	
	//test를 삭제한다
	public void testDelete(TestVO vo)
	{
		//데이터베이스에 연결한다.
		while(DBOpen() == true) 
		{
			sql  = "";
			sql += "DELETE FROM test WHERE t_no = " + vo.getTestNumber();
			RunSQL(sql);
		}
	}
	
	//test 제목과 폴더명을 업데이트한다
	public boolean testUpdate(TestVO vo)
	{
		//브라우저에서 넣을 input 값 변수명
		String newTitleName = "";
		String newFolerName = "";
		if ( DBOpen() == false ) {return false;}
		sql = "";
		sql += "UPDATE test ";
		sql += "SET t_title = '" + newTitleName.replace("'", "") + "',";
		sql += "t_foldername = '" + newFolerName + "' ";
		sql += "WHERE t_no = " + vo.getTestNumber();
		RunSQL(sql);
		return true;
	}
	
	//test를 목록을 최신순으로 보여준다. (테스트 제목, 참여수, 폴더명)
	public boolean selectTestIndex(TestVO vo)
	{
		while( DBOpen() == false) {return false;}
		while (GetNext() == true)
		{
			sql = "";
			sql += "SELECT t_title,t_rjoincount,t_foldername ";
			sql += "FROM test ";
			sql += "order by t_no desc";
		}
		OpenQuery(sql);
		return true;
	}
	
	//test 시작/결과 화면을 조회한다 (테스트 제목, 참여수, 폴더명, 해시태그, 게시일 )
	public boolean selectTestView(TestVO vo)
	{
		while( DBOpen() == false) {return false;}
		while (GetNext() == true)
		{
			sql = "";
			sql += "SELECT t_title,t_rjoincount,t_foldername,t_hashtag,t_postdate ";
			sql += "FROM test ";
			sql += "WHERE t_no = " + vo.getTestNumber();
		}
		OpenQuery(sql);
		return true;
	}
	
	public static void main(String[] args) 
	{
		//***********데이터베이스 연결 종료는 tail에서*************//
	}

}
