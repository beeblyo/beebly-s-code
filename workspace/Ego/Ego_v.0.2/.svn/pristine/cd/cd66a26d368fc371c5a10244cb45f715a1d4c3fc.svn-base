package ego.mail;

import java.util.Properties;

import javax.mail.Address;
import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

public class MailSend 
{
	
	private static class SMTPAuthenticator extends Authenticator
	{
		public PasswordAuthentication getPasswordAuthentication() 
		{
			return new PasswordAuthentication("racc730296", "@javamail7302");
		}
	}
	
	
	public static void Send(String title,String content,String toEmail) 
	{
		Properties p = new Properties();
		p.put("mail.smtp.user", "racc730296@gmail.com"); 
		p.put("mail.smtp.host", "smtp.gmail.com");
		p.put("mail.smtp.port", "465");
		p.put("mail.smtp.starttls.enable", "true");
		p.put("mail.smtp.auth", "true");

		p.put("mail.smtp.debug", "true");
		p.put("mail.smtp.socketFactory.port", "465");
		p.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
		p.put("mail.smtp.socketFactory.fallback", "false");

		try 
		{
			Authenticator auth = new SMTPAuthenticator();
			Session session = Session.getInstance(p, auth);
			session.setDebug(true); 

			MimeMessage msg = new MimeMessage(session);
			String message = content;
			msg.setSubject(title);
			
			
			Address fromAddr = new InternetAddress("racc730296@gmail.com"); 
			msg.setFrom(fromAddr);
			
			Address toAddr = new InternetAddress(toEmail); 
			msg.addRecipient(Message.RecipientType.TO, toAddr);
			msg.setContent(message, "text/html;charset=KSC5601");
	
			Transport.send(msg);
			
		} catch (Exception e) 
		{ 
			e.printStackTrace();
		}
		
	}
	
	
	public static void main(String[] args)
	{
		double value = Math.random();
		int codeVal = (int)(value * 100000);
		//MailSend ms = new MailSend();
		MailSend.Send("제목","코드:" + codeVal ,"ego730296@naver.com");
		
		
		
		
		
		//https://stackoverflow.com/questions/15378133/could-not-connect-to-smtp-host-smtp-gmail-com-port-465-response-1/17761173
	}
			
}